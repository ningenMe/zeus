name: api-deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  constant:
    runs-on: ubuntu-latest
    outputs:
      java-version: ${{ steps.constant.outputs.java-version }}
      java-distribution: ${{ steps.constant.outputs.java-distribution }}
      gradle-version: ${{ steps.constant.outputs.gradle-version }}
      aws-region: ${{ steps.constant.outputs.aws-region }}
      aws-ecr-repository: zeus-api-repository
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v3.0.0
      - id: constant
        name: constant
        uses: ./.github/workflows/composite/constant

  gradle-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project-name: "api"
          - project-name: "domain"
          - project-name: "infrastructure"
    name: gradle-check-${{ matrix.project-name }}
    needs: [ constant ]
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v3.0.0
      - id: gradle-check
        name: gradle check
        uses: ./.github/workflows/composite/gradle-check
        with:
          java-version: ${{ needs.constant.outputs.java-version }}
          java-distribution: ${{ needs.constant.outputs.java-distribution }}
          gradle-version: ${{ needs.constant.outputs.gradle-version }}
          project-name: ${{ matrix.project-name }}

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [ constant, gradle-check ]
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v3.0.0
      - id: build-and-push-image
        name: build and push image
        uses: ./.github/workflows/composite/build-and-push-image
        with:
          java-version: ${{ needs.constant.outputs.java-version }}
          java-distribution: ${{ needs.constant.outputs.java-distribution }}
          gradle-version: ${{ needs.constant.outputs.gradle-version }}
          project-name: "api"
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ needs.constant.outputs.aws-region }}
          aws-ecr-registry: ${{ secrets.AWS_ECR_REGISTRY }}
          aws-ecr-repository: ${{ needs.constant.outputs.aws-ecr-repository }}

  codedeploy:
    runs-on: ubuntu-latest
    needs: [ constant, build-and-push-image ]
    steps:
      - id: checkout
        name: checkout
        uses: actions/checkout@v3.0.0
      - id: codedeploy
        name: codedeploy
        uses: ./.github/workflows/composite/codedeploy
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ needs.constant.outputs.aws-region }}
          aws-ecr-registry: ${{ secrets.AWS_ECR_REGISTRY }}
          aws-ecr-repository: ${{ needs.constant.outputs.aws-ecr-repository }}
          aws-s3-bucket: ${{ secrets.AWS_S3_BUCKET }}

#  api-task-deploy:
#    runs-on: ubuntu-latest
#    needs: [ constant, build-and-push-image ]
#    steps:
#      - id: checkout
#        name: checkout
#        uses: actions/checkout@v3.0.0
#      - id: api-task-deploy
#        name: api task deploy
#        uses: ./.github/workflows/composite/api-task-deploy
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ needs.constant.outputs.aws-region }}
